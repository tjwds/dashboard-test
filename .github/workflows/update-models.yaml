name: Update Model Notebooks
on:
  schedule:
    - cron:  '0 1 * * *'

jobs:
  update-long-running-notebooks:
    if: (github.event_name == 'schedule' || (github.event.issue.title == '[dashboard] Refresh Notebooks'  && github.actor == 'tjwds' && github.event_name == 'issues')) && github.repository == 'tjwds/dashboard-test'
    runs-on: ubuntu-latest
    steps:

    - name: Copy Repository Contents
      uses: actions/checkout@v2
      with:
        ssh-key: ${{ secrets.SSH_DEPLOY_KEY }}

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.6

    - name: install dependencies
      run: |
        pip3 install matplotlib pandas papermill ipykernel jupyter folium psutil pymc3 arviz xlrd altair altair_saver
        python3 -m ipykernel install --user --name python3
        sudo chmod -R 777 .

    - name: update notebooks
      id: update_nb
      run: |
        papermill --kernel python3 _notebooks/2020-03-16-covid19_growth_bayes.ipynb _notebooks/2020-03-16-covid19_growth_bayes.ipynb
        git add 2020-03-16-covid19_growth_bayes.ipynb

    - name: Create an issue if notebook update failure occurs
      if: failure()
      uses: actions/github-script@0.6.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          var run_id = process.env.RUN_ID;
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "Error updating notebooks",
            body: `Long-running notebooks failed to update properly. See run [${run_id}](https://github.com/github/covid19-dashboard/actions/runs/${run_id}) for more details.`
          })
      env:
        RUN_ID: ${{ github.run_id	 }}

    - name: save notebooks & images
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        git add images/
        git commit -m'[bot] refresh long-running notebooks'
        git push -f

    - name: convert notebooks and word docs to posts
      uses: ./_action_files

    - name: setup directories for Jekyll build
      run: |
        rm -rf _site
        sudo chmod -R 777 .

    - name: Jekyll build
      uses: docker://hamelsmu/fastpages-jekyll
      with:
        args: bash -c "gem install bundler && jekyll build -V"
      env:
        JEKYLL_ENV: 'production'
        
    - name: copy CNAME file into _site if CNAME exists
      run: |
        sudo chmod -R 777 _site/
        cp CNAME _site/ 2>/dev/null || :
        
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        deploy_key: ${{ secrets.SSH_DEPLOY_KEY }}
        publish_dir: ./_site
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        force_orphan: true
